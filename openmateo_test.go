package openmateo

import (
	"encoding/json"
	"errors"
	"net/http"
	"net/http/httptest"
	"os"
	"strings"
	"testing"
	"time"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestClient_Get(t *testing.T) {
	// Start a local HTTP server
	server := httptest.NewServer(http.HandlerFunc(func(rw http.ResponseWriter, req *http.Request) {
		// Send response to be tested
		dat, err := os.ReadFile("test_data/all_params.json")
		require.NoError(t, err)
		rw.Write(dat)
	}))
	// Close the server when test finishes
	defer server.Close()

	// Use Client & URL from our local test server
	client := NewClient()
	client.HTTPClient = server.Client()
	client.host = server.URL[7:] // remove http://
	client.scheme = "http"

	opts := NewOptionsBuilder().Build()
	weatherData, err := client.Get(opts)

	require.NoError(t, err)
	assert.NotNil(t, weatherData)
	assert.Equal(t, 52.52, weatherData.Latitude)
}

// mockRoundTripper is a custom http.RoundTripper to simulate network errors.
type mockRoundTripper struct {
	err error
}

func (m *mockRoundTripper) RoundTrip(req *http.Request) (*http.Response, error) {
	return nil, m.err
}

func TestClient_Get_ErrorConditions(t *testing.T) {
	// Test case for a direct network error (e.g., server unreachable)
	t.Run("Network Error on Do", func(t *testing.T) {
		client := NewClient()
		// Inject a mock transport that always returns an error
		client.HTTPClient = &http.Client{
			Transport: &mockRoundTripper{err: errors.New("simulated network error")},
		}

		_, err := client.Get(&Options{})
		if err == nil {
			t.Fatal("expected a network error, but got nil")
		}
		if !strings.Contains(err.Error(), "simulated network error") {
			t.Errorf("expected error to contain 'simulated network error', but got %v", err)
		}
	})

	// Table-driven tests for various server response errors
	tests := map[string]struct {
		handler       http.HandlerFunc
		expectErr     bool
		errContains   string
		checkResponse func(*WeatherData) bool // Optional check on the response
	}{
		"API Error 500 Internal Server Error": {
			handler: func(w http.ResponseWriter, r *http.Request) {
				w.WriteHeader(http.StatusInternalServerError)
				w.Write([]byte(`{"error": "true", "reason": "Something went wrong"}`))
			},
			expectErr:   true,
			errContains: "server http error: 500", // The current Get() implementation will fail on JSON decoding
		},

		"API Error 400 Bad Request": {
			handler: func(w http.ResponseWriter, r *http.Request) {
				w.WriteHeader(http.StatusBadRequest)
				w.Write([]byte(`{"error": "true", "reason": "Invalid request parameters"}`))
			},
			expectErr:   true,
			errContains: "server http error: 400", // This also fails on JSON decoding
		},

		"Malformed JSON Response": {
			handler: func(w http.ResponseWriter, r *http.Request) {
				w.WriteHeader(http.StatusOK)
				w.Write([]byte(`{"latitude": 40.71, "longitude": -74.01,`)) // Incomplete JSON
			},
			expectErr:   true,
			errContains: "unexpected EOF",
		},

		"Empty Response Body": {
			handler: func(w http.ResponseWriter, r *http.Request) {
				w.WriteHeader(http.StatusOK)
				// Write nothing to the body
			},
			expectErr:   true,
			errContains: "EOF",
		},
	}

	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			// Create a new mock server for each test case
			server := httptest.NewServer(tc.handler)
			defer server.Close()

			// Create a client configured to use the mock server
			client := NewClient()
			client.HTTPClient = server.Client() // Use the test server's client
			client.host = server.URL            // Point the client to the mock server
			client.scheme = ""                  // Scheme is included in server.URL

			// Create basic options for the request
			opts := NewOptionsBuilder().Latitude(40.71).Longitude(-74.01).Build()

			// We need to parse the server URL to set the host and scheme properly
			// so the client's url() method builds the correct URL for the test server.
			// A simpler way for testing is to just replace the host and scheme.
			urlParts := strings.Split(server.URL, "://")
			client.scheme = urlParts[0]
			client.host = urlParts[1]

			_, err := client.Get(opts)

			if tc.expectErr {
				if err == nil {
					t.Fatalf("expected an error, but got nil")
				}
				if tc.errContains != "" && !strings.Contains(err.Error(), tc.errContains) {
					t.Errorf("expected error to contain %q, but got: %v", tc.errContains, err)
				}
			} else if err != nil {
				t.Fatalf("did not expect an error, but got: %v", err)
			}
		})
	}
}

func TestURL(t *testing.T) {

	tests := map[string]struct {
		client  *Client
		options Options
		want    string
	}{
		"basic": {
			client:  NewClient(),
			options: *NewOptionsBuilder().Build(),
			want:    "https://api.open-meteo.com/v1/forecast?latitude=0&longitude=0",
		},
		"historical": {
			client: NewClient(),
			options: Options{
				Start: time.Date(2000, 1, 1, 0, 0, 0, 0, time.UTC),
				End:   time.Date(2000, 1, 2, 0, 0, 0, 0, time.UTC),
			},
			want: "https://archive-api.open-meteo.com/v1/archive?end_date=2000-01-02&latitude=0&longitude=0&start_date=2000-01-01",
		},
		"with api key": {
			client:  NewClientWithKey("testkeynotvalue"),
			options: Options{},
			want:    "https://customer-api.open-meteo.com/v1/forecast?apikey=testkeynotvalue&latitude=0&longitude=0",
		},
		"hourly and daily": {
			client:  NewClient(),
			options: Options{HourlyMetrics: &HourlyMetrics{Temperature2m: true}, DailyMetrics: &DailyMetrics{Temperature2mMin: true}},
			want:    "https://api.open-meteo.com/v1/forecast?daily=temperature_2m_min&hourly=temperature_2m&latitude=0&longitude=0",
		},
		"current condition": {
			client:  NewClient(),
			options: Options{CurrentMetrics: &CurrentMetrics{Temperature2m: true}},
			want:    "https://api.open-meteo.com/v1/forecast?current=temperature_2m&latitude=0&longitude=0",
		},
		"iota options": {
			client:  NewClient(),
			options: *NewOptionsBuilder().TemperatureUnit(Fahrenheit).WindspeedUnit(KN).PrecipitationUnit(IN).Build(),
			want:    "https://api.open-meteo.com/v1/forecast?latitude=0&longitude=0&precipitation_unit=in&temperature_unit=fahrenheit&windspeed_unit=kn",
		},
		"other options": {
			client:  NewClient(),
			options: *NewOptionsBuilder().Timezone(*time.UTC).PastDays(1).ForcastDays(2).Build(),
			want:    "https://api.open-meteo.com/v1/forecast?forecast_days=2&latitude=0&longitude=0&past_days=1&timezone=UTC",
		},
	}
	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			t.Parallel()
			got := tc.client.url(&tc.options)
			assert.Equal(t, tc.want, got)
		})
	}
}

func TestParsing(t *testing.T) {

	tests := map[string]struct {
		input string
		want  WeatherData
	}{
		"all params": {
			input: "test_data/all_params.json",
			want: WeatherData{
				Latitude:             52.52,
				Longitude:            13.419998,
				GenerationtimeMs:     3.3779144287109375,
				UtcOffsetSeconds:     0,
				Timezone:             "GMT",
				TimezoneAbbreviation: "GMT",
				Elevation:            38.0,
				CurrentUnits: CurrentUnits{
					Time:                "iso8601",
					Interval:            "seconds",
					Temperature2m:       "°C",
					RelativeHumidity2m:  "%",
					IsDay:               "",
					ApparentTemperature: "°C",
					Precipitation:       "mm",
					Rain:                "mm",
					Showers:             "mm",
					Snowfall:            "cm",
					WeatherCode:         "wmo code",
					CloudCover:          "%",
					PressureMsl:         "hPa",
					SurfacePressure:     "hPa",
					WindSpeed10m:        "km/h",
					WindDirection10m:    "°",
					WindGusts10m:        "km/h",
				},
				Current: Current{
					Time:                "2025-07-27T03:00",
					Interval:            900,
					Temperature2m:       16.5,
					RelativeHumidity2m:  89,
					IsDay:               0,
					ApparentTemperature: 17.5,
					Precipitation:       0,
					Rain:                0,
					Showers:             0,
					Snowfall:            0,
					WeatherCode:         3,
					CloudCover:          100,
					PressureMsl:         1012.7,
					SurfacePressure:     1008.2,
					WindSpeed10m:        3.1,
					WindDirection10m:    291,
					WindGusts10m:        6.1,
				},
				HourlyUnits: HourlyUnits{
					Time:                     "iso8601",
					Temperature2m:            "°C",
					RelativeHumidity2m:       "%",
					DewPoint2m:               "°C",
					ApparentTemperature:      "°C",
					PrecipitationProbability: "%",
					Precipitation:            "mm",
					Rain:                     "mm",
					Showers:                  "mm",
					Snowfall:                 "cm",
					SnowDepth:                "m",
					WeatherCode:              "wmo code",
					PressureMsl:              "hPa",
					SurfacePressure:          "hPa",
					CloudCover:               "%",
					CloudCoverLow:            "%",
					CloudCoverMid:            "%",
					CloudCoverHigh:           "%",
					Evapotranspiration:       "mm",
					Visibility:               "m",
					Et0FaoEvapotranspiration: "mm",
					VapourPressureDeficit:    "kPa",
					WindSpeed10m:             "km/h",
					WindSpeed80m:             "km/h",
					WindSpeed120m:            "km/h",
					WindSpeed180m:            "km/h",
					WindDirection10m:         "°",
					WindDirection80m:         "°",
					WindDirection120m:        "°",
					WindDirection180m:        "°",
					WindGusts10m:             "km/h",
					Temperature80m:           "°C",
					Temperature120m:          "°C",
					Temperature180m:          "°C",
					SoilTemperature0cm:       "°C",
					SoilTemperature6cm:       "°C",
					SoilTemperature18cm:      "°C",
					SoilTemperature54cm:      "°C",
					SoilMoisture0To1cm:       "m³/m³",
					SoilMoisture1To3cm:       "m³/m³",
					SoilMoisture9To27cm:      "m³/m³",
					SoilMoisture3To9cm:       "m³/m³",
				},
				Hourly: Hourly{
					Time:                     []string{"2025-07-27T00:00", "2025-07-27T01:00", "2025-07-27T02:00", "2025-07-27T03:00", "2025-07-27T04:00", "2025-07-27T05:00", "2025-07-27T06:00", "2025-07-27T07:00", "2025-07-27T08:00", "2025-07-27T09:00", "2025-07-27T10:00", "2025-07-27T11:00", "2025-07-27T12:00", "2025-07-27T13:00", "2025-07-27T14:00", "2025-07-27T15:00", "2025-07-27T16:00", "2025-07-27T17:00", "2025-07-27T18:00", "2025-07-27T19:00", "2025-07-27T20:00", "2025-07-27T21:00", "2025-07-27T22:00", "2025-07-27T23:00", "2025-07-28T00:00", "2025-07-28T01:00", "2025-07-28T02:00", "2025-07-28T03:00", "2025-07-28T04:00", "2025-07-28T05:00", "2025-07-28T06:00", "2025-07-28T07:00", "2025-07-28T08:00", "2025-07-28T09:00", "2025-07-28T10:00", "2025-07-28T11:00", "2025-07-28T12:00", "2025-07-28T13:00", "2025-07-28T14:00", "2025-07-28T15:00", "2025-07-28T16:00", "2025-07-28T17:00", "2025-07-28T18:00", "2025-07-28T19:00", "2025-07-28T20:00", "2025-07-28T21:00", "2025-07-28T22:00", "2025-07-28T23:00", "2025-07-29T00:00", "2025-07-29T01:00", "2025-07-29T02:00", "2025-07-29T03:00", "2025-07-29T04:00", "2025-07-29T05:00", "2025-07-29T06:00", "2025-07-29T07:00", "2025-07-29T08:00", "2025-07-29T09:00", "2025-07-29T10:00", "2025-07-29T11:00", "2025-07-29T12:00", "2025-07-29T13:00", "2025-07-29T14:00", "2025-07-29T15:00", "2025-07-29T16:00", "2025-07-29T17:00", "2025-07-29T18:00", "2025-07-29T19:00", "2025-07-29T20:00", "2025-07-29T21:00", "2025-07-29T22:00", "2025-07-29T23:00", "2025-07-30T00:00", "2025-07-30T01:00", "2025-07-30T02:00", "2025-07-30T03:00", "2025-07-30T04:00", "2025-07-30T05:00", "2025-07-30T06:00", "2025-07-30T07:00", "2025-07-30T08:00", "2025-07-30T09:00", "2025-07-30T10:00", "2025-07-30T11:00", "2025-07-30T12:00", "2025-07-30T13:00", "2025-07-30T14:00", "2025-07-30T15:00", "2025-07-30T16:00", "2025-07-30T17:00", "2025-07-30T18:00", "2025-07-30T19:00", "2025-07-30T20:00", "2025-07-30T21:00", "2025-07-30T22:00", "2025-07-30T23:00", "2025-07-31T00:00", "2025-07-31T01:00", "2025-07-31T02:00", "2025-07-31T03:00", "2025-07-31T04:00", "2025-07-31T05:00", "2025-07-31T06:00", "2025-07-31T07:00", "2025-07-31T08:00", "2025-07-31T09:00", "2025-07-31T10:00", "2025-07-31T11:00", "2025-07-31T12:00", "2025-07-31T13:00", "2025-07-31T14:00", "2025-07-31T15:00", "2025-07-31T16:00", "2025-07-31T17:00", "2025-07-31T18:00", "2025-07-31T19:00", "2025-07-31T20:00", "2025-07-31T21:00", "2025-07-31T22:00", "2025-07-31T23:00", "2025-08-01T00:00", "2025-08-01T01:00", "2025-08-01T02:00", "2025-08-01T03:00", "2025-08-01T04:00", "2025-08-01T05:00", "2025-08-01T06:00", "2025-08-01T07:00", "2025-08-01T08:00", "2025-08-01T09:00", "2025-08-01T10:00", "2025-08-01T11:00", "2025-08-01T12:00", "2025-08-01T13:00", "2025-08-01T14:00", "2025-08-01T15:00", "2025-08-01T16:00", "2025-08-01T17:00", "2025-08-01T18:00", "2025-08-01T19:00", "2025-08-01T20:00", "2025-08-01T21:00", "2025-08-01T22:00", "2025-08-01T23:00", "2025-08-02T00:00", "2025-08-02T01:00", "2025-08-02T02:00", "2025-08-02T03:00", "2025-08-02T04:00", "2025-08-02T05:00", "2025-08-02T06:00", "2025-08-02T07:00", "2025-08-02T08:00", "2025-08-02T09:00", "2025-08-02T10:00", "2025-08-02T11:00", "2025-08-02T12:00", "2025-08-02T13:00", "2025-08-02T14:00", "2025-08-02T15:00", "2025-08-02T16:00", "2025-08-02T17:00", "2025-08-02T18:00", "2025-08-02T19:00", "2025-08-02T20:00", "2025-08-02T21:00", "2025-08-02T22:00", "2025-08-02T23:00"},
					Temperature2m:            []float64{17.4, 17.1, 16.8, 16.4, 16.3, 16.8, 18.2, 19.5, 20.9, 22, 22.9, 23.6, 23.1, 22.9, 23.6, 24.1, 23.9, 23.8, 23.3, 22.8, 21.5, 20.6, 19.6, 18.9, 18.6, 18.2, 17.8, 17.7, 17.5, 17.3, 17.3, 17.3, 17.9, 18.5, 18.9, 19.1, 20.6, 20.1, 20.7, 21.9, 21.6, 21.4, 20.9, 20.1, 19.2, 18.6, 17.8, 17.1, 16.5, 15.9, 15.2, 14.7, 14.3, 14.4, 15.3, 16.9, 18, 19, 19.9, 21.4, 21.7, 21.4, 21.8, 21.9, 21.7, 21.1, 20.3, 19.4, 18.3, 17.4, 16.8, 16, 15.4, 15, 14.8, 14.7, 14.9, 15.3, 15.8, 16.6, 17.7, 18.6, 19.6, 20.5, 21, 20.8, 20.2, 19.6, 19, 18.5, 17.9, 17.3, 16.7, 16.2, 15.7, 15.2, 14.9, 14.7, 14.7, 14.7, 14.8, 14.9, 15.3, 16.4, 17.9, 19.1, 20.1, 21, 21.4, 21.2, 20.5, 19.8, 19.1, 18.4, 17.9, 18.4, 17.9, 17.4, 16.7, 16.1, 15.6, 15.4, 15.3, 15.3, 15.6, 16, 16.6, 17.4, 18.3, 19.4, 20.8, 22.3, 23.5, 24.2, 24.4, 24.3, 23.5, 22.2, 21, 20.2, 19.4, 18.7, 18.2, 17.8, 17.4, 16.9, 16.4, 16.1, 16.1, 16.3, 16.7, 17.3, 18.1, 18.8, 19.4, 19.9, 20.2, 20.3, 20.3, 20.2, 20.3, 20.4, 20.2, 19.7, 18.9, 18.1, 17.4, 16.6},
					RelativeHumidity2m:       []int{87, 86, 87, 89, 88, 85, 77, 70, 61, 54, 46, 44, 48, 50, 46, 48, 48, 50, 52, 54, 68, 74, 80, 84, 85, 85, 85, 88, 89, 86, 87, 88, 84, 78, 75, 73, 59, 65, 58, 57, 55, 56, 58, 61, 69, 71, 78, 81, 81, 79, 82, 84, 87, 86, 82, 73, 67, 63, 62, 50, 47, 54, 52, 49, 50, 51, 52, 58, 64, 69, 72, 75, 79, 81, 82, 83, 83, 82, 80, 76, 71, 66, 61, 56, 53, 55, 59, 62, 63, 64, 65, 68, 72, 75, 78, 81, 83, 85, 88, 89, 90, 91, 89, 81, 71, 62, 56, 51, 51, 58, 70, 79, 84, 86, 88, 63, 66, 69, 71, 72, 73, 73, 73, 73, 72, 71, 69, 67, 66, 63, 58, 53, 48, 44, 42, 42, 47, 55, 62, 67, 71, 75, 78, 80, 82, 85, 87, 89, 90, 89, 88, 85, 82, 78, 73, 68, 64, 63, 64, 65, 66, 67, 68, 70, 73, 75, 77, 79},
					DewPoint2m:               []float64{15.3, 14.8, 14.6, 14.6, 14.4, 14.3, 14.1, 13.9, 13.1, 12.3, 10.7, 10.6, 11.5, 12, 11.3, 12.4, 12.3, 12.8, 12.9, 13.1, 15.4, 15.8, 16.1, 16.2, 16, 15.6, 15.3, 15.7, 15.7, 15, 15.1, 15.3, 15.2, 14.6, 14.4, 14.2, 12.3, 13.4, 12.1, 13, 12.2, 12.3, 12.4, 12.3, 13.4, 13.3, 14, 13.8, 13.2, 12.3, 12.2, 12, 12.2, 12.1, 12.2, 12.1, 11.8, 11.8, 12.4, 10.6, 9.9, 11.7, 11.5, 10.7, 10.8, 10.6, 10.2, 10.9, 11.4, 11.7, 11.7, 11.6, 11.8, 11.8, 11.7, 11.9, 12, 12.2, 12.4, 12.4, 12.4, 12.2, 11.9, 11.4, 11, 11.4, 11.9, 12.1, 11.8, 11.6, 11.3, 11.4, 11.7, 11.8, 11.9, 12, 12, 12.2, 12.7, 12.9, 13.2, 13.4, 13.5, 13.2, 12.6, 11.7, 11.1, 10.5, 10.8, 12.6, 14.9, 16.1, 16.4, 16, 15.9, 11.2, 11.5, 11.6, 11.4, 11.1, 10.8, 10.6, 10.5, 10.5, 10.5, 10.8, 10.9, 11.2, 11.9, 12.1, 12.2, 12.3, 11.9, 11.2, 10.7, 10.5, 11.5, 12.7, 13.5, 13.8, 14, 14.2, 14.3, 14.3, 14.3, 14.4, 14.2, 14.3, 14.4, 14.5, 14.7, 14.8, 15, 14.9, 14.4, 13.8, 13.1, 13, 13.2, 13.4, 13.8, 14, 14.1, 14, 13.9, 13.6, 13.3, 13},
					ApparentTemperature:      []float64{19.1, 18.5, 18.1, 17.5, 17.5, 17.9, 19.5, 20.3, 21.6, 22.4, 22.5, 23.1, 22.7, 22.3, 23.6, 24, 23.4, 23.4, 23.2, 23, 22, 21.3, 20.5, 19.9, 19.4, 18.8, 18.5, 18.4, 18.1, 17.6, 17.7, 17.4, 18, 18.1, 18.2, 18.2, 19.5, 18.4, 19.2, 20.7, 20.1, 20.1, 19.9, 18.8, 18.6, 18, 17.6, 16.9, 15.9, 15.1, 14.4, 13.9, 13.4, 13.5, 14.1, 15.8, 16.7, 17.6, 18.7, 20.3, 19.5, 20.1, 20.6, 20.2, 20, 19.5, 18.8, 18.4, 17.8, 17, 16.3, 15.7, 15.1, 14.7, 14.5, 14.5, 14.6, 15, 15.5, 16.1, 16.9, 17.7, 18.5, 19.5, 20.1, 19.9, 19.2, 18.7, 18.3, 17.9, 17.3, 16.7, 16.1, 15.6, 15, 14.5, 14.2, 14.1, 14.2, 14.3, 14.5, 14.9, 15.4, 16.3, 17.4, 18.2, 18.9, 19.4, 19.8, 20, 20, 19.6, 19.1, 18.5, 18, 17.9, 17.4, 17, 16.3, 15.7, 15.1, 14.8, 14.7, 14.8, 15, 15.5, 16.1, 16.9, 18, 19.2, 20.4, 21.8, 22.7, 23, 23, 22.8, 22.4, 21.6, 20.9, 20.5, 20, 19.6, 19.1, 18.7, 18.3, 17.8, 17.2, 16.9, 17, 16.9, 17.2, 17.9, 18.7, 19.3, 19.3, 19.3, 19.1, 19.1, 19.3, 19.5, 20.1, 20.6, 20.8, 20.3, 19.3, 18.4, 17.6, 16.8},
					PrecipitationProbability: []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 18, 18, 20, 20, 13, 10, 18, 20, 18, 20, 35, 35, 35, 35, 30, 25, 25, 15, 8, 10, 5, 3, 3, 3, 3, 3, 0, 1, 2, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 5, 6, 8, 9, 10, 10, 9, 9, 8, 7, 5, 4, 2, 1, 0, 0, 2, 3, 5, 7, 8, 9, 9, 9, 9, 10, 10, 11, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 25, 26, 27, 28, 29, 31, 32, 34, 36, 38, 41, 45, 50, 54, 57, 60, 24, 24, 24, 24, 25, 25, 26, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 35, 35, 35, 35, 34, 34, 33, 33, 32, 31, 31, 30, 30, 30, 30, 29, 29, 29, 29, 29, 29, 29, 28, 28, 28, 28, 28, 27, 27, 27, 26, 26, 26, 26, 25, 25},
					Precipitation:            []float64{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2, 0.2, 0.2, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0.9, 0.9, 0.9, 1.2, 1.2, 1.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0, 0, 0, 0.6, 0.6, 0.6, 0, 0, 0, 0, 0, 0, 0, 0},
					Rain:                     []float64{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
					Showers:                  []float64{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2, 0.2, 0.2, 0.3, 0.3, 0.3, 0, 0, 0, 0, 0, 0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0.9, 0.9, 0.9, 1.2, 1.2, 1.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0, 0, 0, 0.6, 0.6, 0.6, 0, 0, 0, 0, 0, 0, 0, 0},
					Snowfall:                 []float64{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
					SnowDepth:                []float64{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
					WeatherCode:              []int{3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 61, 80, 61, 61, 80, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 2, 2, 3, 2, 1, 1, 2, 2, 3, 3, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 80, 80, 80, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 95, 95, 95, 95, 95, 95, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 3, 3, 3, 80, 80, 80, 3, 3, 3, 80, 80, 80, 2, 2, 2, 2, 2, 2, 0, 0},
					PressureMsl:              []float64{1013.8, 1013.4, 1013.1, 1012.7, 1012.3, 1012, 1011.8, 1011.7, 1011.7, 1011.5, 1011.1, 1010.9, 1010.5, 1010, 1009.5, 1008.9, 1008.5, 1008.5, 1008.6, 1008.9, 1009.1, 1008.9, 1009, 1009, 1009, 1009, 1008.9, 1008.9, 1009.2, 1009.6, 1009.9, 1010.3, 1010.5, 1010.6, 1010.9, 1010.9, 1010.9, 1011.3, 1011.4, 1010.9, 1010.8, 1010.7, 1011, 1011.7, 1012.2, 1012.4, 1011.9, 1012.1, 1012.3, 1012.5, 1012.7, 1013.1, 1013.4, 1013.6, 1013.8, 1013.9, 1013.9, 1013.6, 1013.4, 1013, 1012.9, 1013.1, 1012.9, 1012.7, 1012.7, 1012.8, 1013, 1013.3, 1013.5, 1013.7, 1013.8, 1013.8, 1013.7, 1013.6, 1013.4, 1013.3, 1013.2, 1013.2, 1013.2, 1013.2, 1013.2, 1013.1, 1012.9, 1012.6, 1012.3, 1012.1, 1012, 1011.9, 1011.8, 1011.7, 1011.6, 1011.4, 1011.2, 1010.9, 1010.6, 1010.2, 1009.9, 1009.5, 1009.1, 1008.9, 1008.9, 1009.1, 1009.3, 1009.3, 1009.3, 1009.3, 1009.2, 1009.1, 1009.1, 1009.2, 1009.3, 1009.5, 1009.7, 1009.9, 1010, 1011.3, 1011.3, 1011.3, 1011.3, 1011.3, 1011.3, 1011.2, 1011, 1010.9, 1010.8, 1010.7, 1010.7, 1010.7, 1010.8, 1010.7, 1010.4, 1009.9, 1009.5, 1009.1, 1008.7, 1008.4, 1008.4, 1008.6, 1008.8, 1008.9, 1009.1, 1009.2, 1009.2, 1009.3, 1009.3, 1009.3, 1009.4, 1009.6, 1010, 1010.4, 1010.9, 1011.4, 1011.8, 1012.2, 1012.4, 1012.6, 1012.8, 1013.1, 1013.5, 1013.9, 1014.2, 1014.4, 1014.7, 1015.1, 1015.5, 1015.9, 1016.3, 1016.8},
					SurfacePressure:          []float64{1009.3, 1008.9, 1008.6, 1008.2, 1007.8, 1007.5, 1007.3, 1007.2, 1007.2, 1007.1, 1006.7, 1006.5, 1006.1, 1005.6, 1005.1, 1004.5, 1004.1, 1004.1, 1004.2, 1004.5, 1004.7, 1004.5, 1004.5, 1004.5, 1004.5, 1004.5, 1004.4, 1004.4, 1004.7, 1005.1, 1005.4, 1005.8, 1006, 1006.1, 1006.4, 1006.4, 1006.4, 1006.8, 1006.9, 1006.5, 1006.4, 1006.3, 1006.5, 1007.2, 1007.7, 1007.9, 1007.4, 1007.6, 1007.8, 1008, 1008.2, 1008.5, 1008.8, 1009, 1009.2, 1009.4, 1009.4, 1009.1, 1008.9, 1008.5, 1008.5, 1008.6, 1008.5, 1008.3, 1008.3, 1008.3, 1008.5, 1008.8, 1009, 1009.2, 1009.3, 1009.3, 1009.2, 1009, 1008.8, 1008.7, 1008.6, 1008.7, 1008.7, 1008.7, 1008.7, 1008.6, 1008.4, 1008.1, 1007.8, 1007.6, 1007.5, 1007.4, 1007.3, 1007.2, 1007.1, 1006.9, 1006.7, 1006.4, 1006.1, 1005.7, 1005.4, 1005, 1004.6, 1004.4, 1004.4, 1004.6, 1004.8, 1004.8, 1004.8, 1004.8, 1004.7, 1004.7, 1004.7, 1004.8, 1004.9, 1005, 1005.2, 1005.4, 1005.5, 1006.8, 1006.8, 1006.8, 1006.8, 1006.8, 1006.8, 1006.7, 1006.5, 1006.4, 1006.3, 1006.2, 1006.2, 1006.2, 1006.3, 1006.2, 1005.9, 1005.5, 1005.1, 1004.7, 1004.3, 1004, 1004, 1004.2, 1004.4, 1004.4, 1004.6, 1004.7, 1004.7, 1004.8, 1004.8, 1004.8, 1004.9, 1005.1, 1005.5, 1005.9, 1006.4, 1006.9, 1007.3, 1007.7, 1007.9, 1008.1, 1008.3, 1008.6, 1009, 1009.4, 1009.7, 1009.9, 1010.2, 1010.6, 1011, 1011.4, 1011.8, 1012.3},
					CloudCover:               []int{88, 72, 82, 100, 99, 94, 96, 85, 91, 98, 99, 100, 100, 100, 94, 99, 18, 24, 44, 97, 82, 92, 100, 85, 96, 88, 93, 100, 100, 100, 100, 100, 100, 100, 99, 100, 94, 93, 100, 100, 84, 100, 100, 100, 100, 100, 55, 30, 52, 69, 63, 53, 37, 43, 53, 58, 88, 81, 64, 62, 74, 70, 52, 63, 54, 75, 82, 44, 42, 67, 52, 42, 58, 65, 73, 80, 78, 75, 73, 72, 70, 69, 69, 69, 69, 79, 90, 100, 97, 95, 92, 95, 97, 100, 96, 92, 88, 91, 94, 97, 94, 90, 87, 89, 92, 94, 96, 98, 100, 100, 100, 100, 100, 100, 100, 64, 72, 80, 70, 59, 49, 64, 80, 95, 92, 89, 86, 88, 90, 92, 91, 89, 88, 92, 95, 99, 95, 91, 87, 91, 96, 100, 90, 81, 71, 58, 44, 31, 54, 76, 99, 94, 88, 83, 89, 94, 100, 96, 93, 89, 77, 65, 53, 52, 50, 49, 33, 16},
					CloudCoverLow:            []int{0, 0, 3, 40, 63, 12, 8, 0, 0, 12, 85, 78, 72, 100, 28, 52, 0, 10, 0, 61, 53, 49, 69, 52, 55, 69, 78, 75, 92, 100, 97, 99, 92, 75, 84, 100, 85, 88, 79, 80, 0, 0, 89, 34, 49, 11, 55, 26, 39, 40, 24, 45, 38, 44, 53, 58, 73, 64, 44, 48, 53, 26, 39, 45, 40, 39, 25, 27, 7, 5, 0, 0, 0, 1, 2, 3, 20, 36, 53, 52, 51, 50, 52, 55, 57, 65, 72, 80, 61, 43, 24, 36, 47, 59, 64, 69, 74, 77, 80, 83, 78, 72, 67, 64, 61, 58, 56, 55, 53, 57, 61, 65, 70, 74, 79, 5, 11, 16, 24, 32, 40, 42, 45, 47, 39, 31, 23, 29, 34, 40, 43, 45, 48, 47, 46, 45, 30, 15, 0, 10, 21, 31, 23, 15, 7, 15, 23, 31, 45, 60, 74, 73, 71, 70, 74, 77, 81, 71, 60, 50, 33, 17, 0, 10, 21, 31, 21, 10},
					CloudCoverMid:            []int{69, 72, 80, 100, 70, 89, 63, 82, 91, 96, 94, 100, 100, 100, 89, 98, 18, 18, 44, 53, 64, 83, 100, 68, 89, 75, 84, 100, 79, 84, 100, 100, 100, 83, 94, 86, 90, 87, 99, 85, 84, 100, 100, 3, 100, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75, 46, 38, 47, 52, 59, 25, 44, 25, 58, 69, 29, 37, 62, 52, 42, 58, 65, 71, 78, 67, 55, 44, 44, 45, 45, 37, 29, 21, 47, 74, 100, 95, 91, 86, 86, 87, 87, 79, 71, 63, 60, 58, 55, 55, 55, 55, 46, 38, 29, 48, 67, 86, 68, 49, 31, 54, 77, 100, 58, 62, 67, 45, 22, 0, 30, 59, 89, 85, 80, 76, 79, 82, 85, 80, 74, 69, 71, 74, 76, 80, 83, 87, 87, 87, 87, 80, 72, 65, 43, 22, 0, 13, 27, 40, 43, 45, 48, 65, 83, 100, 81, 62, 43, 46, 50, 53, 49, 44, 40, 27, 13},
					CloudCoverHigh:           []int{59, 0, 0, 0, 94, 0, 86, 78, 0, 0, 50, 100, 0, 100, 0, 0, 0, 0, 0, 83, 14, 0, 0, 0, 25, 0, 0, 75, 98, 48, 100, 100, 69, 100, 28, 67, 0, 0, 92, 96, 25, 58, 100, 100, 100, 99, 0, 5, 19, 42, 45, 18, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 65, 98, 65, 33, 0, 33, 67, 100, 69, 37, 6, 25, 44, 63, 43, 22, 2, 26, 51, 75, 83, 92, 100, 100, 100, 100, 100, 100, 100, 5, 4, 2, 7, 12, 17, 12, 8, 3, 2, 2, 1, 1, 0, 0, 13, 25, 38, 55, 73, 90, 60, 30, 0, 33, 67, 100, 67, 33, 0, 0, 0, 0, 31, 61, 92, 61, 31, 0, 0, 0, 0, 20, 40, 60, 40, 20, 0, 0, 0, 0, 0, 0},
					Evapotranspiration:       []float64{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
					Visibility:               []float64{21800.00, 18740.00, 16640.00, 13460.00, 14680.00, 19080.00, 33140.00, 46020.00, 59600.00, 68820.00, 74320.00, 75080.00, 73760.00, 72200.00, 74520.00, 73220.00, 73360.00, 72080.00, 70720.00, 69400.00, 51920.00, 38900.00, 26340.00, 18220.00, 16140.00, 16300.00, 16480.00, 9720.00, 8680.00, 13800.00, 11400.00, 8980.00, 17540.00, 30060.00, 34600.00, 40540.00, 63860.00, 54760.00, 64420.00, 66020.00, 68000.00, 68000.00, 65500.00, 61760.00, 51040.00, 46160.00, 34460.00, 27680.00, 28560.00, 31380.00, 26680.00, 20240.00, 14840.00, 14200.00, 18940.00, 39980.00, 49860.00, 55740.00, 56340.00, 70740.00, 73280.00, 66760.00, 68840.00, 72280.00, 71980.00, 72240.00, 72120.00, 67320.00, 60820.00, 54020.00, 48520.00, 41860.00, 34760.00, 31340.00, 27920.00, 24500.00, 24560.00, 24600.00, 24660.00, 32800.00, 40940.00, 49080.00, 55220.00, 61340.00, 67480.00, 66460.00, 65420.00, 64400.00, 62500.00, 60600.00, 58700.00, 52780.00, 46860.00, 40940.00, 34880.00, 28820.00, 22760.00, 18560.00, 14380.00, 10180.00, 9400.00, 8620.00, 7840.00, 24340.00, 40820.00, 57320.00, 62440.00, 67580.00, 72700.00, 57300.00, 41920.00, 26520.00, 21860.00, 17180.00, 12520.00, 21380.00, 22760.00, 24140.00, 24140.00, 24140.00, 24140.00, 21740.00, 19360.00, 16960.00, 19360.00, 21740.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 21840.00, 19560.00, 17260.00, 18620.00, 19980.00, 21340.00, 22280.00, 23200.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00, 24140.00},
					Et0FaoEvapotranspiration: []float64{0, 0, 0, 0, 0.01, 0.03, 0.1, 0.21, 0.28, 0.32, 0.35, 0.32, 0.2, 0.21, 0.21, 0.27, 0.25, 0.22, 0.12, 0.05, 0.03, 0.02, 0.01, 0, 0, 0, 0, 0, 0.03, 0.04, 0.04, 0.05, 0.07, 0.12, 0.19, 0.15, 0.21, 0.19, 0.25, 0.25, 0.2, 0.17, 0.12, 0.09, 0.04, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.01, 0.02, 0.04, 0.1, 0.16, 0.2, 0.26, 0.34, 0.43, 0.39, 0.38, 0.4, 0.34, 0.29, 0.21, 0.12, 0.06, 0.02, 0.02, 0.01, 0.01, 0, 0, 0, 0, 0.01, 0.04, 0.08, 0.14, 0.21, 0.28, 0.34, 0.39, 0.41, 0.39, 0.35, 0.28, 0.19, 0.11, 0.07, 0.05, 0.02, 0.01, 0.01, 0.01, 0.01, 0, 0, 0, 0.02, 0.03, 0.06, 0.11, 0.19, 0.27, 0.33, 0.36, 0.36, 0.33, 0.28, 0.21, 0.15, 0.09, 0.05, 0.05, 0.02, 0.01, 0.01, 0.01, 0, 0, 0, 0, 0.01, 0.05, 0.09, 0.13, 0.17, 0.21, 0.28, 0.35, 0.39, 0.38, 0.34, 0.28, 0.22, 0.15, 0.09, 0.04, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0.03, 0.08, 0.12, 0.16, 0.2, 0.25, 0.29, 0.31, 0.29, 0.24, 0.2, 0.17, 0.13, 0.07, 0.03, 0.01, 0.01, 0, 0},
					VapourPressureDeficit:    []float64{0.26, 0.27, 0.25, 0.21, 0.22, 0.29, 0.48, 0.68, 0.97, 1.22, 1.51, 1.63, 1.47, 1.4, 1.58, 1.57, 1.55, 1.47, 1.37, 1.28, 0.82, 0.63, 0.46, 0.35, 0.32, 0.31, 0.31, 0.24, 0.22, 0.28, 0.26, 0.24, 0.33, 0.47, 0.55, 0.6, 0.99, 0.83, 1.03, 1.13, 1.16, 1.12, 1.04, 0.92, 0.69, 0.62, 0.45, 0.37, 0.36, 0.38, 0.31, 0.27, 0.21, 0.23, 0.31, 0.52, 0.68, 0.82, 0.89, 1.28, 1.38, 1.17, 1.26, 1.34, 1.3, 1.23, 1.15, 0.95, 0.76, 0.62, 0.54, 0.46, 0.37, 0.32, 0.3, 0.29, 0.29, 0.31, 0.36, 0.45, 0.59, 0.73, 0.89, 1.06, 1.17, 1.11, 0.97, 0.87, 0.82, 0.77, 0.72, 0.63, 0.53, 0.46, 0.39, 0.33, 0.29, 0.25, 0.2, 0.18, 0.17, 0.15, 0.19, 0.36, 0.59, 0.84, 1.04, 1.22, 1.25, 1.06, 0.73, 0.49, 0.35, 0.3, 0.25, 0.78, 0.7, 0.62, 0.55, 0.51, 0.48, 0.47, 0.47, 0.47, 0.5, 0.53, 0.59, 0.66, 0.72, 0.83, 1.03, 1.27, 1.51, 1.69, 1.78, 1.76, 1.53, 1.2, 0.95, 0.78, 0.65, 0.54, 0.46, 0.41, 0.36, 0.29, 0.24, 0.2, 0.18, 0.2, 0.23, 0.3, 0.37, 0.48, 0.61, 0.74, 0.85, 0.88, 0.86, 0.83, 0.81, 0.79, 0.76, 0.69, 0.59, 0.52, 0.46, 0.4},
					WindSpeed10m:             []float64{1, 1.9, 1.8, 3.1, 1.6, 2.1, 0.5, 3.1, 2.6, 2.3, 4.4, 4.6, 6.6, 8.9, 3.3, 6.5, 8.6, 8.4, 6.6, 5.7, 9.3, 8.9, 8.5, 7.8, 8.4, 8.7, 7.9, 8.4, 8.8, 9.3, 9.2, 11.2, 11.3, 13.9, 14.8, 15.6, 12.3, 19.5, 14.8, 14.8, 14.7, 14.2, 12.4, 14, 11.3, 11.6, 10.3, 9.9, 11.2, 10.8, 10.2, 10, 10.5, 10.7, 12.9, 12.3, 13.3, 13.5, 13.7, 13.8, 15.1, 13.6, 13.7, 13.2, 13.4, 12.5, 10.8, 8.4, 6.5, 6.5, 7.3, 5.8, 5.8, 5.8, 5.8, 5.9, 6, 6.8, 7.4, 8.5, 10.2, 11.2, 12, 12.4, 12.3, 11.9, 11.2, 10.4, 9.1, 7.4, 7.1, 7.2, 7.6, 8, 8.6, 9, 9.2, 9, 9.2, 9.5, 8.9, 7.6, 7.3, 7.8, 8.7, 9.9, 10.8, 11.9, 12.8, 14, 15.1, 15.8, 15.1, 13.7, 12.8, 6.4, 6.5, 6.3, 5.7, 5.4, 5.1, 4.8, 4.6, 4.6, 4.9, 5.5, 5.8, 5.8, 5.8, 6, 7, 8.7, 9.7, 10.5, 11.4, 11.4, 10.8, 9.7, 8.1, 6.4, 4.5, 3.7, 3.6, 4, 4, 4, 3.8, 3.7, 3.9, 5.4, 6.8, 7.2, 7.2, 8, 10.1, 12.6, 14.4, 14.5, 13.6, 12.2, 10, 7.3, 5.4, 5, 5.8, 6.1, 5.8, 5.4},
					WindSpeed80m:             []float64{3.3, 5.5, 5, 7.3, 7.3, 5.9, 0.4, 3.9, 3.4, 3.1, 5.5, 5.4, 8.7, 11.9, 4, 7.9, 11.2, 11.9, 8.9, 8.7, 16.2, 14.2, 13.5, 12.1, 13.7, 14.1, 13, 14.1, 14.9, 15.3, 14.7, 18.4, 19.2, 23.4, 24.1, 26.2, 20.5, 33.4, 24.5, 24.8, 24.4, 24.3, 21.3, 25.8, 20.8, 21.6, 22.8, 22.1, 25, 23.5, 22.5, 22.2, 22.4, 21.3, 23.5, 23.3, 24.4, 24.1, 24.1, 24.3, 26.9, 22.7, 23.2, 23, 24.7, 23.9, 22.1, 18.8, 18.6, 19.5, 18.3, 17.6, 17.8, 17, 16.2, 15.2, 14, 13.1, 13, 14.5, 16.5, 18.5, 19.6, 20.5, 20.7, 19.7, 18.5, 17.3, 15.6, 14, 14.1, 15, 17.1, 18.4, 19.2, 19.5, 19.2, 18.9, 19.4, 19.3, 17.2, 14.1, 12.4, 12.9, 14.7, 16.6, 18.3, 20.1, 22.4, 25.3, 28.7, 30.4, 30.1, 28.4, 27.3, 16.3, 19.3, 20.9, 20.2, 19.4, 18.7, 18, 17.3, 16.7, 16.3, 16, 15.3, 13.3, 10.3, 9.1, 10.6, 13.6, 16.4, 18.7, 20.6, 21.7, 21, 18.9, 17.1, 15.1, 13, 11.9, 12, 12.6, 13.2, 13, 12.9, 12.5, 11.4, 11.7, 12.3, 12.3, 11.9, 13, 16.9, 22, 25.6, 26.5, 25.8, 23.8, 19.6, 14.6, 11.6, 13.4, 17.5, 20.1, 19.9, 18.7},
					WindSpeed120m:            []float64{4.3, 6.5, 6.4, 9, 10, 8.3, 3.7, 4.2, 3.4, 3.1, 6, 5.7, 8.7, 11.9, 4.3, 8.2, 11.5, 12.2, 9.2, 9, 17.3, 15, 14.2, 13.9, 15, 16.1, 15.7, 16.9, 16.3, 16.3, 16, 19.8, 21.1, 25.3, 25.7, 28.2, 22.2, 36, 26, 26.9, 26.2, 26.1, 23, 28.5, 25.3, 27.7, 27.7, 32, 28.7, 27.7, 26.3, 26.5, 27.1, 23.7, 24.7, 25.3, 25.9, 25.5, 25.2, 25.7, 28.4, 23.8, 24.3, 24.3, 26.2, 25.4, 23.9, 21.8, 24.9, 26.8, 27.3, 24.4, 24, 23.4, 23.3, 22, 18.4, 14.7, 13.2, 14.5, 17.3, 19.6, 20.7, 21.7, 21.9, 20.9, 19.2, 18, 16.4, 14.8, 15.7, 19.1, 24.2, 27.1, 26.8, 25, 22.7, 21.2, 20.3, 19.5, 17.2, 14.4, 13.2, 13.7, 15.5, 17.4, 19.1, 21.4, 23.8, 27.2, 30.8, 33, 33.5, 32.5, 31.8, 20.9, 23.8, 25.9, 25.3, 24.3, 23.8, 23.2, 22.8, 22.5, 22.4, 22.7, 21.2, 17.1, 12.2, 9.6, 10.9, 14.3, 17.4, 19.7, 22.2, 23.3, 22.6, 20.7, 19.1, 17.8, 16.4, 15.7, 15.8, 16.3, 16.5, 16.3, 15.8, 15.2, 14.5, 14.1, 14.5, 13.8, 13, 13.8, 17.7, 23, 26.7, 27.6, 27.3, 25.8, 21.6, 16.1, 13.4, 15.7, 20.9, 24.6, 24.9, 24},
					WindSpeed180m:            []float64{4.3, 7.3, 7.8, 10.4, 12.8, 11, 6, 4.2, 3.7, 3.1, 6, 5.5, 9, 11.9, 4.7, 8.1, 11.5, 12.4, 9.4, 8.9, 20.2, 15.5, 16.9, 18, 17.6, 20.2, 20.2, 22.1, 16.9, 17.7, 17, 22, 23.4, 26.5, 26.9, 29.4, 23.7, 37.7, 27.3, 28.4, 27.4, 27.6, 24.7, 31, 33, 35.7, 39.2, 42.6, 42.1, 42.1, 39, 38.3, 39.1, 38, 25.4, 26.1, 26.6, 26.6, 26.3, 26.4, 29.1, 24.6, 24.8, 25.1, 27, 26.2, 25.2, 25.1, 29.7, 31.4, 33, 29.5, 28.6, 28.3, 28, 27.3, 25.3, 23.4, 22.5, 21.4, 20.5, 20.3, 20.9, 22.5, 22.7, 21.7, 20, 18.4, 16.8, 15.5, 16.6, 21.4, 28.3, 32.6, 33.6, 32.6, 30.1, 26.3, 21.4, 17.8, 17.3, 18.7, 20.1, 19.5, 18.3, 17.9, 19.3, 21.6, 24.5, 28.2, 32.4, 35.3, 35.7, 34.9, 34.1, 26.3, 27.9, 28.8, 27.7, 26.8, 26, 25.5, 25.3, 25.3, 25.5, 25.7, 24.3, 20.3, 15.2, 12.2, 13, 15.6, 18.2, 20.6, 23.1, 24.4, 23.7, 21.7, 20.1, 19.6, 19.1, 18.8, 18.8, 18.8, 18.4, 17.2, 16.1, 15.6, 16.7, 19.2, 20.5, 18.6, 15.1, 14.1, 17.7, 23.4, 27.4, 28.8, 28.5, 27, 23.6, 18.9, 16.6, 19.1, 24.1, 27.7, 28.3, 27.4},
					WindDirection10m:         []int{225, 292, 281, 291, 297, 329, 225, 339, 326, 309, 325, 321, 338, 346, 354, 19, 22, 25, 22, 18, 344, 333, 332, 347, 340, 343, 344, 353, 341, 344, 334, 320, 323, 323, 319, 299, 308, 309, 309, 296, 306, 297, 287, 305, 297, 292, 299, 289, 291, 291, 288, 285, 286, 284, 288, 285, 283, 279, 272, 276, 282, 287, 293, 296, 290, 288, 285, 280, 273, 273, 279, 270, 270, 266, 263, 259, 253, 245, 241, 242, 247, 249, 249, 248, 249, 256, 264, 270, 263, 247, 229, 217, 211, 207, 202, 203, 206, 217, 231, 245, 256, 265, 279, 292, 300, 303, 300, 295, 292, 293, 295, 297, 295, 293, 292, 218, 214, 211, 215, 222, 231, 228, 225, 219, 216, 212, 210, 210, 210, 213, 215, 218, 219, 218, 215, 215, 217, 222, 225, 223, 209, 191, 186, 180, 185, 190, 197, 209, 236, 262, 273, 270, 264, 262, 266, 270, 273, 276, 281, 284, 283, 279, 270, 270, 270, 273, 274, 278},
					WindDirection80m:         []int{264, 293, 300, 290, 290, 313, 270, 338, 328, 315, 328, 323, 336, 346, 355, 16, 21, 25, 21, 17, 343, 336, 335, 348, 342, 345, 346, 356, 345, 345, 335, 321, 326, 326, 322, 302, 309, 311, 310, 298, 307, 299, 289, 306, 298, 296, 301, 292, 293, 293, 292, 287, 289, 286, 288, 287, 284, 279, 273, 276, 282, 288, 294, 297, 291, 288, 286, 282, 279, 282, 285, 281, 277, 274, 271, 266, 258, 249, 242, 243, 247, 249, 250, 248, 250, 255, 263, 268, 262, 247, 232, 222, 215, 211, 208, 208, 210, 220, 235, 246, 254, 266, 280, 293, 301, 304, 302, 297, 294, 294, 297, 297, 296, 294, 293, 229, 225, 225, 230, 239, 245, 244, 239, 233, 229, 224, 221, 218, 216, 214, 215, 220, 220, 218, 216, 216, 218, 222, 224, 220, 214, 205, 201, 200, 202, 208, 216, 226, 242, 261, 273, 273, 267, 264, 268, 271, 274, 278, 282, 285, 284, 280, 275, 276, 278, 280, 283, 286},
					WindDirection120m:        []int{265, 289, 297, 286, 285, 304, 299, 340, 328, 315, 327, 325, 336, 346, 355, 15, 20, 24, 21, 16, 343, 336, 336, 350, 343, 350, 351, 359, 346, 346, 337, 323, 327, 327, 323, 302, 310, 311, 311, 298, 307, 300, 290, 307, 300, 300, 305, 297, 295, 295, 293, 291, 292, 287, 289, 287, 284, 279, 273, 276, 282, 288, 294, 297, 291, 288, 286, 283, 284, 287, 291, 286, 283, 281, 278, 274, 267, 253, 241, 240, 247, 250, 250, 249, 250, 255, 264, 268, 261, 247, 233, 226, 222, 220, 216, 213, 213, 220, 233, 245, 254, 267, 281, 293, 301, 304, 302, 297, 295, 296, 297, 298, 297, 295, 293, 238, 235, 235, 240, 249, 255, 254, 249, 243, 240, 237, 235, 231, 223, 214, 214, 219, 220, 218, 216, 215, 217, 221, 224, 223, 220, 217, 215, 215, 216, 221, 229, 239, 251, 267, 277, 276, 268, 264, 266, 271, 274, 277, 282, 285, 285, 280, 278, 281, 285, 288, 290, 294},
					WindDirection180m:        []int{265, 281, 292, 284, 281, 302, 303, 340, 331, 315, 327, 328, 337, 346, 351, 13, 20, 22, 18, 14, 344, 338, 344, 2, 359, 1, 2, 7, 348, 348, 339, 325, 329, 329, 325, 303, 312, 312, 311, 299, 308, 301, 291, 309, 306, 305, 314, 303, 306, 306, 305, 301, 301, 298, 288, 288, 283, 279, 273, 276, 282, 288, 294, 297, 291, 288, 287, 286, 289, 292, 295, 292, 289, 288, 286, 282, 276, 266, 258, 253, 252, 250, 249, 248, 250, 255, 263, 267, 261, 248, 236, 229, 227, 226, 226, 228, 230, 234, 241, 252, 268, 281, 291, 298, 302, 304, 303, 298, 296, 297, 299, 299, 298, 296, 295, 248, 245, 244, 249, 258, 264, 262, 255, 250, 248, 248, 246, 243, 234, 223, 219, 218, 219, 216, 214, 214, 216, 220, 224, 226, 226, 227, 227, 227, 228, 233, 241, 251, 264, 275, 280, 279, 271, 266, 268, 272, 275, 279, 283, 286, 286, 283, 283, 286, 292, 295, 297, 300},
					WindGusts10m:             []float64{4.7, 4.3, 3.6, 6.1, 7.6, 4.3, 4, 10.1, 8.6, 9.7, 11.9, 14.4, 13.3, 15.1, 15.1, 14.4, 14.4, 18, 19.1, 14, 22, 19.8, 19.1, 18.7, 18, 18.4, 18, 18.7, 20.9, 20.2, 20.2, 23.8, 24.1, 29.5, 33.1, 32.4, 34.6, 43.2, 38.9, 31.3, 39.6, 32.8, 29.5, 29.2, 30.2, 24.1, 27.4, 24.5, 26.6, 26.6, 25.9, 24.1, 24.5, 25.9, 33.8, 35.6, 33.5, 33.8, 35.3, 35.3, 37.4, 40.7, 35.3, 34.2, 33.8, 33.5, 30.6, 25.9, 19.4, 14.8, 17.3, 16.9, 13.7, 14, 14, 14.4, 15.8, 17.3, 18.7, 24.5, 30.2, 36, 36.4, 37.1, 37.4, 36.7, 36.4, 35.6, 29.5, 23.4, 17.3, 18, 18.4, 19.1, 20.5, 21.6, 23, 24.8, 26.3, 28.1, 25.2, 22, 19.1, 21.2, 23.4, 25.6, 27.4, 29.5, 31.3, 34.9, 38.5, 42.1, 38.2, 33.8, 29.9, 16.9, 15.8, 14.8, 14, 13, 12.2, 11.5, 11.2, 10.4, 11.9, 13, 14.4, 15.5, 16.9, 18, 20.5, 22.7, 25.2, 26.3, 27, 28.1, 27, 26.3, 25.2, 20.9, 16.6, 12.2, 11.2, 10.1, 9, 8.6, 8.6, 8.3, 11.5, 15.1, 18.4, 19.4, 20.9, 22, 26.3, 31, 35.3, 36, 36.4, 37.1, 32, 27.4, 22.3, 19.4, 16.6, 13.7, 13, 12.2},
					Temperature80m:           []float64{18.2, 17.9, 17.5, 17.3, 17, 16.8, 17.1, 18.1, 19.4, 20.3, 21.3, 21.9, 21.8, 21.6, 22.2, 22.6, 22.5, 22.4, 22.2, 22, 20.7, 19.7, 18.7, 18, 17.6, 17.3, 17, 16.8, 16.5, 16.3, 16.2, 16.2, 16.9, 17.3, 17.5, 17.9, 19.3, 18.9, 19.3, 20.5, 20.3, 20.4, 20, 19.3, 18.5, 17.9, 17.2, 16.5, 15.8, 15.2, 14.6, 14, 13.5, 13.3, 13.8, 15.4, 16.3, 17, 17.6, 19.1, 19.5, 19, 19.5, 19.8, 19.9, 19.7, 19.4, 18.8, 18.1, 17.2, 16.3, 15.8, 15.2, 14.7, 14.3, 14.1, 14.1, 14.2, 14.5, 15, 15.7, 16.4, 17.2, 18, 18.5, 18.5, 18.1, 17.8, 17.6, 17.3, 17, 16.6, 16, 15.5, 15, 14.4, 14, 13.8, 13.8, 13.8, 13.8, 13.8, 14.1, 14.9, 16, 17.1, 18.1, 19.1, 19.6, 19.4, 18.8, 18.2, 17.7, 17.2, 16.9, 18.2, 18.2, 18.1, 17.7, 17.2, 16.7, 16.4, 16.1, 15.9, 15.8, 15.7, 15.9, 16.4, 17.1, 18, 19.2, 20.6, 21.7, 22.5, 23, 23, 22.3, 21.2, 20.2, 19.6, 19.1, 18.7, 18.3, 18, 17.7, 17.2, 16.8, 16.3, 15.8, 15.4, 15.3, 15.7, 16.3, 17, 17.6, 18.2, 18.6, 18.7, 18.7, 18.7, 18.9, 19.2, 19.4, 19.3, 19.1, 18.7, 18.1, 17.3},
					Temperature120m:          []float64{18.2, 18, 17.6, 17.4, 17.2, 17.1, 17.5, 17.6, 18.9, 19.7, 20.8, 21.4, 21.3, 21.1, 21.7, 22.1, 21.9, 21.9, 21.7, 21.5, 20.2, 19.2, 18.2, 17.5, 17.2, 16.8, 16.5, 16.3, 16, 15.8, 15.7, 15.7, 16.4, 16.8, 17, 17.4, 18.8, 18.3, 18.8, 20, 19.8, 19.9, 19.5, 18.8, 18.1, 17.5, 16.6, 16.1, 15.2, 14.6, 14, 13.4, 12.9, 12.6, 13.1, 14.7, 15.6, 16.3, 16.9, 18.3, 18.7, 18.2, 18.7, 19, 19.1, 19, 18.7, 18.2, 17.7, 17.1, 16.1, 15.6, 15, 14.5, 14.1, 13.8, 13.6, 13.6, 13.8, 14.3, 14.9, 15.6, 16.4, 17.2, 17.7, 17.7, 17.4, 17.1, 16.9, 16.6, 16.3, 15.9, 15.5, 15, 14.4, 13.8, 13.4, 13.2, 13.1, 13.1, 13.1, 13.1, 13.4, 14.2, 15.3, 16.4, 17.4, 18.3, 18.8, 18.6, 18, 17.4, 17, 16.6, 16.3, 17.9, 18.1, 18.2, 17.9, 17.4, 17, 16.8, 16.6, 16.5, 16.3, 16.2, 16.2, 16.4, 16.7, 17.3, 18.4, 19.8, 21, 21.8, 22.3, 22.3, 21.6, 20.5, 19.5, 19, 18.6, 18.3, 18, 17.8, 17.5, 17.1, 16.8, 16.3, 15.6, 14.9, 14.6, 14.9, 15.6, 16.3, 16.9, 17.4, 17.8, 17.9, 17.9, 18, 18.2, 18.5, 18.7, 18.7, 18.6, 18.4, 17.9, 17.2},
					Temperature180m:          []float64{18, 17.9, 17.5, 17.3, 17.3, 17.3, 17.8, 17.1, 18.3, 19.2, 20.2, 20.8, 20.7, 20.6, 21.1, 21.5, 21.4, 21.3, 21.2, 21, 19.6, 18.6, 17.7, 17.3, 17, 16.7, 16.4, 16.1, 15.5, 15.3, 15.2, 15.2, 15.8, 16.2, 16.4, 16.8, 18.2, 17.8, 18.2, 19.4, 19.2, 19.3, 18.9, 18.3, 17.9, 17.6, 16.5, 16, 15, 14.3, 13.7, 13.1, 12.7, 12.3, 12.3, 13.8, 14.8, 15.4, 16, 17.4, 17.8, 17.3, 17.8, 18.2, 18.2, 18.1, 17.8, 17.4, 17.1, 16.5, 15.8, 15.2, 14.7, 14.2, 13.8, 13.5, 13.2, 13.1, 13.1, 13.5, 14.1, 14.7, 15.5, 16.3, 16.8, 16.8, 16.5, 16.2, 16, 15.8, 15.5, 15.2, 15, 14.6, 14, 13.3, 12.8, 12.6, 12.5, 12.5, 12.4, 12.4, 12.7, 13.5, 14.5, 15.5, 16.5, 17.4, 17.9, 17.7, 17.2, 16.6, 16.2, 15.8, 15.5, 17.4, 17.7, 17.9, 17.7, 17.3, 17, 16.9, 16.8, 16.8, 16.7, 16.6, 16.5, 16.3, 16.2, 16.5, 17.5, 18.9, 20.1, 20.9, 21.3, 21.4, 20.7, 19.6, 18.7, 18.2, 17.9, 17.7, 17.5, 17.4, 17.2, 16.9, 16.4, 16, 15.5, 14.9, 14.6, 14.7, 15, 15.4, 15.9, 16.5, 17, 17.1, 17.1, 17.1, 17.4, 17.7, 18, 18.1, 18.1, 17.9, 17.5, 16.9},
					SoilTemperature0cm:       []float64{16.6, 16.4, 16.2, 16, 16.2, 17.8, 20.7, 24.7, 27, 28.6, 29, 30.5, 25.7, 25.3, 28.2, 29.5, 28.6, 26.8, 24.3, 22.7, 21.5, 20.9, 20.4, 19.6, 19.3, 18.8, 18.6, 18.5, 18.5, 18.6, 18.8, 18.9, 19.5, 21.9, 22.8, 21.5, 24.4, 22.6, 24.2, 25.1, 23.9, 22.1, 21.2, 19.6, 18.9, 18.6, 17.1, 16.4, 15.8, 15.5, 14.7, 14.3, 14.1, 15.5, 17.4, 19.5, 20.5, 23, 24.7, 26.2, 25.4, 26.7, 26.3, 24.8, 23.6, 21.7, 19.7, 18, 16.9, 16.3, 16, 15.1, 14.5, 14.2, 14.2, 14.5, 15.3, 16.5, 18, 19.9, 22.1, 23.9, 25.4, 26.5, 26.6, 25.2, 22.8, 20.7, 19.4, 18.5, 17.7, 16.9, 16.3, 15.8, 15.4, 15.1, 14.9, 14.8, 14.8, 15, 15.3, 15.8, 16.8, 18.8, 21.2, 23, 23.6, 23.6, 23.3, 22.8, 22, 21, 19.9, 18.7, 17.8, 17.3, 16.6, 16, 15.3, 14.6, 14.2, 14.1, 14.2, 14.6, 15.4, 16.4, 17.5, 18.7, 20, 21.3, 22.9, 24.5, 25.5, 25.7, 25.2, 24.4, 23.1, 21.6, 20.2, 19.3, 18.5, 17.9, 17.3, 16.9, 16.4, 15.8, 15.2, 15.2, 15.9, 17.2, 18.5, 20.1, 21.8, 22.7, 22.3, 21.2, 20.5, 20.9, 21.6, 22, 21.5, 20.7, 19.7, 18.7, 17.7, 16.7, 16, 15.4},
					SoilTemperature6cm:       []float64{18.6, 18.2, 17.9, 17.6, 17.4, 17.7, 18.7, 20.6, 22.7, 24.3, 25.6, 26.4, 26.1, 25.5, 25.4, 26.4, 26.5, 26.4, 25.5, 24.2, 23.2, 22.4, 21.8, 21.3, 20.8, 20.4, 20, 19.8, 19.6, 19.5, 19.5, 19.5, 19.5, 20, 21.2, 21.3, 21.5, 21.8, 22.5, 23, 23, 22.8, 22.1, 21.3, 20.4, 19.9, 18.8, 18.3, 17.7, 17.3, 16.9, 16.4, 16.1, 16, 16.6, 17.5, 18.5, 19.5, 20.8, 22.2, 22.8, 23, 23.6, 23.6, 23.3, 22.5, 21.5, 20.4, 19.4, 18.5, 18, 17.5, 16.9, 16.5, 16.3, 16.1, 16.1, 16.2, 16.7, 17.7, 19.1, 20.3, 21.4, 22.5, 23.2, 23.5, 23.5, 23.1, 22.1, 20.6, 19.4, 18.6, 18.1, 17.6, 17.2, 16.9, 16.6, 16.4, 16.3, 16.2, 16.1, 16.1, 16.4, 17.3, 18.7, 19.9, 20.8, 21.6, 22.1, 22.3, 22.2, 21.9, 21.2, 20.1, 19.4, 18.5, 18, 17.4, 16.9, 16.5, 16.1, 15.8, 15.6, 15.5, 15.6, 15.8, 16.3, 17, 18, 19.1, 20.5, 22, 23.1, 23.6, 23.6, 23.4, 22.9, 22.1, 21.3, 20.6, 19.8, 19.2, 18.7, 18.4, 18, 17.6, 17.2, 16.9, 16.9, 17, 17.3, 18, 18.9, 19.8, 20.7, 21.7, 22.2, 22.1, 21.7, 21.2, 21, 20.8, 20.5, 19.9, 19.2, 18.5, 17.9, 17.3},
					SoilTemperature18cm:      []float64{21.2, 20.9, 20.6, 20.3, 20.1, 19.9, 19.7, 19.7, 19.9, 20.3, 20.7, 21.2, 21.7, 22, 22.3, 22.6, 22.9, 23.1, 23.3, 23.4, 23.3, 23.2, 23, 22.8, 22.5, 22.3, 22, 21.8, 21.6, 21.3, 21.1, 21, 20.8, 20.7, 20.7, 20.8, 20.8, 20.9, 21, 21.1, 21.3, 21.4, 21.5, 21.5, 21.4, 21.3, 20, 19.8, 19.6, 19.4, 19.2, 19, 18.8, 18.5, 18.4, 18.3, 18.3, 18.3, 18.5, 18.8, 19.1, 19.4, 19.7, 20, 20.2, 20.4, 20.5, 20.5, 20.4, 20.2, 20, 19.8, 19.5, 19.3, 19, 18.8, 18.5, 18.3, 18.2, 18.1, 18.2, 18.3, 18.5, 18.8, 19.1, 19.5, 19.9, 20.1, 20.2, 20.2, 20.1, 20, 19.8, 19.6, 19.4, 19.2, 19, 18.8, 18.6, 18.4, 18.2, 18, 17.9, 17.8, 17.9, 18, 18.2, 18.5, 18.8, 19.1, 19.3, 19.5, 19.6, 19.7, 19.7, 18.6, 18.6, 18.5, 18.4, 18.3, 18.1, 17.9, 17.7, 17.6, 17.4, 17.3, 17.2, 17.2, 17.3, 17.4, 17.7, 18.1, 18.4, 18.8, 19.2, 19.5, 19.7, 19.9, 20, 20, 20, 19.9, 19.8, 19.6, 19.5, 19.3, 19.1, 18.9, 18.7, 18.5, 18.4, 18.3, 18.3, 18.4, 18.6, 18.9, 19.1, 19.3, 19.4, 19.6, 19.7, 19.8, 19.8, 19.8, 19.7, 19.6, 19.4, 19.2},
					SoilTemperature54cm:      []float64{20.5, 20.5, 20.5, 20.5, 20.5, 20.5, 20.5, 20.4, 20.4, 20.4, 20.4, 20.4, 20.4, 20.4, 20.4, 20.4, 20.5, 20.5, 20.5, 20.5, 20.5, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 20.6, 18.9, 18.9, 18.9, 18.9, 18.9, 18.9, 18.9, 18.9, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.8, 18.7, 18.7, 18.7, 18.7, 18.7, 18.7, 18.6, 18.6, 18.6, 18.6, 18.6, 18.6, 18.7, 18.7, 18.7, 18.7, 18.7, 18.7, 18.7, 18.7, 18.7, 18.6, 18.6, 18.6, 18.6, 18.6, 18.6, 18.5, 18.5, 18.5, 18.5, 18.5, 18.5, 18.5, 18.5, 18.5, 18.5, 18.5, 18.4, 18.3, 18.3, 18.3, 18.3, 18.3, 18.3, 18.3, 18.3, 18.3, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.1, 18.1, 18.1, 18.1, 18.1, 18.1, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2},
					SoilMoisture0To1cm:       []float64{0.328, 0.328, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.327, 0.328, 0.328, 0.328, 0.328, 0.328, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.33, 0.297, 0.297, 0.297, 0.297, 0.297, 0.297, 0.298, 0.297, 0.297, 0.296, 0.295, 0.293, 0.291, 0.288, 0.286, 0.284, 0.282, 0.281, 0.28, 0.28, 0.28, 0.281, 0.282, 0.283, 0.284, 0.285, 0.286, 0.286, 0.287, 0.287, 0.287, 0.288, 0.288, 0.288, 0.288, 0.287, 0.284, 0.281, 0.281, 0.288, 0.299, 0.307, 0.309, 0.309, 0.308, 0.306, 0.303, 0.301, 0.3, 0.3, 0.3, 0.301, 0.303, 0.304, 0.304, 0.304, 0.303, 0.301, 0.299, 0.296, 0.291, 0.285, 0.288, 0.306, 0.332, 0.353, 0.364, 0.371, 0.375, 0.305, 0.305, 0.305, 0.305, 0.304, 0.304, 0.304, 0.303, 0.303, 0.303, 0.303, 0.302, 0.301, 0.3, 0.298, 0.296, 0.293, 0.29, 0.288, 0.285, 0.284, 0.284, 0.284, 0.285, 0.286, 0.287, 0.288, 0.289, 0.289, 0.29, 0.29, 0.291, 0.292, 0.294, 0.297, 0.3, 0.306, 0.313, 0.316, 0.311, 0.303, 0.299, 0.305, 0.315, 0.321, 0.319, 0.312, 0.307, 0.305, 0.305, 0.305, 0.304, 0.304},
					SoilMoisture1To3cm:       []float64{0.328, 0.329, 0.329, 0.329, 0.329, 0.329, 0.33, 0.329, 0.329, 0.329, 0.329, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.329, 0.329, 0.329, 0.33, 0.33, 0.33, 0.299, 0.299, 0.299, 0.299, 0.299, 0.299, 0.299, 0.299, 0.299, 0.298, 0.297, 0.296, 0.294, 0.292, 0.29, 0.288, 0.287, 0.285, 0.284, 0.283, 0.283, 0.284, 0.285, 0.285, 0.286, 0.287, 0.287, 0.288, 0.288, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.288, 0.287, 0.285, 0.285, 0.286, 0.287, 0.29, 0.296, 0.304, 0.309, 0.309, 0.306, 0.303, 0.302, 0.301, 0.301, 0.302, 0.303, 0.304, 0.304, 0.304, 0.304, 0.303, 0.301, 0.299, 0.295, 0.29, 0.292, 0.305, 0.323, 0.34, 0.352, 0.362, 0.369, 0.307, 0.307, 0.306, 0.306, 0.305, 0.305, 0.305, 0.305, 0.305, 0.305, 0.305, 0.304, 0.303, 0.302, 0.3, 0.298, 0.296, 0.294, 0.292, 0.29, 0.289, 0.288, 0.288, 0.288, 0.288, 0.289, 0.29, 0.291, 0.291, 0.292, 0.292, 0.293, 0.293, 0.293, 0.292, 0.294, 0.3, 0.309, 0.314, 0.311, 0.305, 0.302, 0.308, 0.317, 0.322, 0.32, 0.314, 0.309, 0.307, 0.307, 0.306, 0.305, 0.304},
					SoilMoisture9To27cm:      []float64{0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.333, 0.333, 0.333, 0.333, 0.333, 0.333, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.315, 0.314, 0.314, 0.314, 0.314, 0.314, 0.314, 0.313, 0.313, 0.313, 0.313, 0.313, 0.312, 0.312, 0.311, 0.311, 0.311, 0.31, 0.31, 0.309, 0.309, 0.309, 0.308, 0.308, 0.308, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.306, 0.306, 0.306, 0.305, 0.305, 0.305, 0.305, 0.305, 0.305, 0.304, 0.304, 0.304, 0.305, 0.305, 0.305, 0.306, 0.306, 0.306, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.308, 0.308, 0.308, 0.308, 0.308, 0.308, 0.308, 0.308, 0.308, 0.308, 0.308, 0.31, 0.312, 0.314, 0.319, 0.318, 0.318, 0.318, 0.317, 0.317, 0.317, 0.317, 0.317, 0.317, 0.316, 0.316, 0.316, 0.315, 0.315, 0.315, 0.314, 0.314, 0.313, 0.313, 0.312, 0.312, 0.311, 0.311, 0.31, 0.31, 0.309, 0.309, 0.308, 0.308, 0.308, 0.308, 0.308, 0.308, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.308, 0.308, 0.308, 0.309, 0.309, 0.31, 0.31, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311},
					SoilMoisture3To9cm:       []float64{0.330, 0.330, 0.330, 0.330, 0.330, 0.331, 0.331, 0.331, 0.331, 0.330, 0.330, 0.330, 0.330, 0.330, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.330, 0.330, 0.330, 0.330, 0.330, 0.330, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.303, 0.303, 0.303, 0.303, 0.303, 0.303, 0.303, 0.303, 0.302, 0.302, 0.302, 0.301, 0.300, 0.299, 0.298, 0.297, 0.296, 0.294, 0.293, 0.292, 0.292, 0.291, 0.291, 0.291, 0.291, 0.291, 0.292, 0.292, 0.293, 0.293, 0.293, 0.293, 0.293, 0.293, 0.293, 0.293, 0.293, 0.292, 0.292, 0.291, 0.289, 0.290, 0.295, 0.303, 0.308, 0.309, 0.307, 0.306, 0.305, 0.304, 0.304, 0.304, 0.305, 0.305, 0.305, 0.305, 0.305, 0.305, 0.304, 0.303, 0.301, 0.299, 0.299, 0.303, 0.309, 0.316, 0.326, 0.337, 0.345, 0.311, 0.310, 0.310, 0.310, 0.309, 0.309, 0.309, 0.308, 0.308, 0.308, 0.307, 0.307, 0.306, 0.306, 0.305, 0.304, 0.303, 0.302, 0.301, 0.299, 0.298, 0.297, 0.296, 0.295, 0.295, 0.295, 0.295, 0.295, 0.295, 0.295, 0.295, 0.296, 0.296, 0.296, 0.296, 0.297, 0.300, 0.305, 0.308, 0.308, 0.306, 0.306, 0.309, 0.314, 0.317, 0.316, 0.314, 0.312, 0.311, 0.310, 0.309, 0.308, 0.307},
				},
				DailyUnits: DailyUnits{
					Time:                        "iso8601",
					WeatherCode:                 "wmo code",
					Temperature2mMax:            "°C",
					Temperature2mMin:            "°C",
					ApparentTemperatureMax:      "°C",
					ApparentTemperatureMin:      "°C",
					Sunrise:                     "iso8601",
					Sunset:                      "iso8601",
					SunshineDuration:            "s",
					DaylightDuration:            "s",
					UvIndexMax:                  "",
					UvIndexClearSkyMax:          "",
					RainSum:                     "mm",
					ShowersSum:                  "mm",
					SnowfallSum:                 "cm",
					PrecipitationSum:            "mm",
					PrecipitationHours:          "h",
					PrecipitationProbabilityMax: "%",
					WindSpeed10mMax:             "km/h",
					WindGusts10mMax:             "km/h",
					WindDirection10mDominant:    "°",
					ShortwaveRadiationSum:       "MJ/m²",
					Et0FaoEvapotranspiration:    "mm",
				},
				Daily: Daily{
					Time:                        []string{"2025-07-27", "2025-07-28", "2025-07-29", "2025-07-30", "2025-07-31", "2025-08-01", "2025-08-02"},
					WeatherCode:                 []int{3, 80, 3, 80, 95, 3, 80},
					Temperature2mMax:            []float64{24.1, 21.9, 21.9, 21, 21.4, 24.4, 20.4},
					Temperature2mMin:            []float64{16.3, 17.1, 14.3, 14.7, 14.7, 15.3, 16.1},
					ApparentTemperatureMax:      []float64{24, 20.7, 20.6, 20.1, 20, 23, 20.8},
					ApparentTemperatureMin:      []float64{17.5, 16.9, 13.4, 14.5, 14.1, 14.7, 16.8},
					Sunrise:                     []string{"2025-07-27T03:18", "2025-07-28T03:20", "2025-07-29T03:21", "2025-07-30T03:23", "2025-07-31T03:25", "2025-08-01T03:26", "2025-08-02T03:28"},
					Sunset:                      []string{"2025-07-27T19:06", "2025-07-28T19:05", "2025-07-29T19:03", "2025-07-30T19:01", "2025-07-31T19:00", "2025-08-01T18:58", "2025-08-02T18:56"},
					SunshineDuration:            []float64{37911.26, 11484.73, 50400, 42856.04, 38636.62, 34403.89, 46073.05},
					DaylightDuration:            []float64{56863.42, 56679.86, 56492.44, 56301.44, 56107.09, 55909.65, 55709.35},
					UvIndexMax:                  []float64{4.8, 5.2, 5.4, 5.7, 4, 5.3, 4.1},
					UvIndexClearSkyMax:          []float64{6.4, 6.4, 6.25, 6.2, 6, 6, 5.9},
					RainSum:                     []float64{0, 0.2, 0, 0.3, 0, 0, 0},
					ShowersSum:                  []float64{0, 0, 0, 1.5, 6.9, 0, 3.3},
					SnowfallSum:                 []float64{0, 0, 0, 0, 0, 0, 0},
					PrecipitationSum:            []float64{0, 0.2, 0, 2.1, 6.9, 0, 3.3},
					PrecipitationHours:          []float64{0, 1, 0, 6, 12, 0, 6},
					PrecipitationProbabilityMax: []int{20, 35, 10, 22, 60, 35, 30},
					WindSpeed10mMax:             []float64{9.3, 19.5, 15.1, 12.4, 15.8, 11.4, 14.5},
					WindGusts10mMax:             []float64{22, 43.2, 40.7, 37.4, 42.1, 28.1, 37.1},
					WindDirection10mDominant:    []int{347, 313, 284, 245, 273, 215, 267},
					ShortwaveRadiationSum:       []float64{15.73, 8.24, 19.83, 18.74, 15.69, 14.76, 14.29},
					Et0FaoEvapotranspiration:    []float64{3.21, 2.28, 3.85, 3.39, 2.93, 3.2, 2.6},
				},
			},
		},
	}
	for name, tc := range tests {
		t.Run(name, func(t *testing.T) {
			t.Parallel()
			got := WeatherData{}

			dat, err := os.ReadFile(tc.input)
			require.NoError(t, err)

			err = json.Unmarshal(dat, &got)
			require.NoError(t, err)

			assert.Equal(t, tc.want, got)
		})
	}
}
